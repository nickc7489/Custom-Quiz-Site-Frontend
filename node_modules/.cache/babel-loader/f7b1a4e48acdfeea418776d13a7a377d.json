{"ast":null,"code":"import _toConsumableArray from\"C:/Users/nickc/Coding Projects/Web Dev/React/Custom-Quiz-Website/quiz-creator/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/nickc/Coding Projects/Web Dev/React/Custom-Quiz-Website/quiz-creator/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useLocation,useNavigate}from\"react-router-dom\";import{useState,useContext}from\"react\";import Card from\"../components/ui/Card\";import GenerateOptions from\"../components/ui/GenerateOption\";import classes from\"../components/quizzes/QuizItem.module.css\";import axios from\"axios\";import AuthContext from\"../context/AuthContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function TakePage(){var location=useLocation();var title=location.state.title;var description=location.state.description;var questions=location.state.questions;var author=location.state.author;var username=location.state.username;var attempts=location.state.attempts;var id=location.state.id;var _useState=useState([Array(questions.length).fill(false)]),_useState2=_slicedToArray(_useState,2),record=_useState2[0],setRecord=_useState2[1];var navigate=useNavigate();var _useContext=useContext(AuthContext),user=_useContext.user;var taker=user?user.username.toString():\"Anonymous\";function makeid(length){var result=\"\";var characters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";var charactersLength=characters.length;for(var i=0;i<length;i++){result+=characters.charAt(Math.floor(Math.random()*charactersLength));}return result;}function submitHandler(){var d=Date();var score=0;for(var answer in record){if(record[answer]===true){score+=1;}}var newAttempts=[].concat(_toConsumableArray(attempts),[{taker:taker,score:score,time:d}]);axios.put(\"https://quiz-handler.fly.dev/api/quizzes/\"+id+\"/\",{id:id,title:title,description:description,questions:questions,author:author,username:username,attempts:newAttempts}).then(function(response){console.log(response);}).catch(function(error){console.log(error);});navigate(\"/result\",{state:{score:score,questions:questions}});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:title}),/*#__PURE__*/_jsx(\"h3\",{children:description}),questions.map(function(question){return/*#__PURE__*/_jsx(\"div\",{style:{width:\"30rem\",margin:\"auto\"},children:/*#__PURE__*/_jsxs(Card,{style:{margin:\"auto\",width:\"900px\"},children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Question \",question.number,\" - \",question.ask]}),/*#__PURE__*/_jsx(GenerateOptions,{options:question.options,type:question.type,setRecord:setRecord,record:record,id:question.number-1},makeid(10))]},makeid(10))});}),/*#__PURE__*/_jsx(\"div\",{className:classes.actions,children:/*#__PURE__*/_jsx(\"button\",{onClick:submitHandler,children:/*#__PURE__*/_jsx(\"h2\",{children:\"Submit\"})})})]})});}export default TakePage;","map":{"version":3,"sources":["C:/Users/nickc/Coding Projects/Web Dev/React/Custom-Quiz-Website/quiz-creator/src/pages/TakePage.js"],"names":["useLocation","useNavigate","useState","useContext","Card","GenerateOptions","classes","axios","AuthContext","TakePage","location","title","state","description","questions","author","username","attempts","id","Array","length","fill","record","setRecord","navigate","user","taker","toString","makeid","result","characters","charactersLength","i","charAt","Math","floor","random","submitHandler","d","Date","score","answer","newAttempts","time","put","then","response","console","log","catch","error","textAlign","map","question","width","margin","number","ask","options","type","actions"],"mappings":"8UAAA,OAASA,WAAT,CAAsBC,WAAtB,KAAyC,kBAAzC,CACA,OAASC,QAAT,CAAmBC,UAAnB,KAAqC,OAArC,CAEA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,CACA,MAAOC,CAAAA,eAAP,KAA4B,iCAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,2CAApB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,C,6IAEA,QAASC,CAAAA,QAAT,EAAoB,CAClB,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CACA,GAAMW,CAAAA,KAAK,CAAGD,QAAQ,CAACE,KAAT,CAAeD,KAA7B,CACA,GAAME,CAAAA,WAAW,CAAGH,QAAQ,CAACE,KAAT,CAAeC,WAAnC,CACA,GAAMC,CAAAA,SAAS,CAAGJ,QAAQ,CAACE,KAAT,CAAeE,SAAjC,CACA,GAAMC,CAAAA,MAAM,CAAGL,QAAQ,CAACE,KAAT,CAAeG,MAA9B,CACA,GAAMC,CAAAA,QAAQ,CAAGN,QAAQ,CAACE,KAAT,CAAeI,QAAhC,CACA,GAAMC,CAAAA,QAAQ,CAAGP,QAAQ,CAACE,KAAT,CAAeK,QAAhC,CACA,GAAMC,CAAAA,EAAE,CAAGR,QAAQ,CAACE,KAAT,CAAeM,EAA1B,CACA,cAA4BhB,QAAQ,CAAC,CAACiB,KAAK,CAACL,SAAS,CAACM,MAAX,CAAL,CAAwBC,IAAxB,CAA6B,KAA7B,CAAD,CAAD,CAApC,wCAAOC,MAAP,eAAeC,SAAf,eACA,GAAMC,CAAAA,QAAQ,CAAGvB,WAAW,EAA5B,CACA,gBAAeE,UAAU,CAACK,WAAD,CAAzB,CAAMiB,IAAN,aAAMA,IAAN,CACA,GAAIC,CAAAA,KAAK,CAAGD,IAAI,CAAGA,IAAI,CAACT,QAAL,CAAcW,QAAd,EAAH,CAA8B,WAA9C,CAEA,QAASC,CAAAA,MAAT,CAAgBR,MAAhB,CAAwB,CACtB,GAAIS,CAAAA,MAAM,CAAG,EAAb,CACA,GAAIC,CAAAA,UAAU,CACZ,gEADF,CAEA,GAAIC,CAAAA,gBAAgB,CAAGD,UAAU,CAACV,MAAlC,CACA,IAAK,GAAIY,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGZ,MAApB,CAA4BY,CAAC,EAA7B,CAAiC,CAC/BH,MAAM,EAAIC,UAAU,CAACG,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBL,gBAA3B,CAAlB,CAAV,CACD,CACD,MAAOF,CAAAA,MAAP,CACD,CACD,QAASQ,CAAAA,aAAT,EAAyB,CACvB,GAAMC,CAAAA,CAAC,CAAGC,IAAI,EAAd,CACA,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CACA,IAAK,GAAMC,CAAAA,MAAX,GAAqBnB,CAAAA,MAArB,CAA6B,CAC3B,GAAIA,MAAM,CAACmB,MAAD,CAAN,GAAmB,IAAvB,CAA6B,CAC3BD,KAAK,EAAI,CAAT,CACD,CACF,CACD,GAAIE,CAAAA,WAAW,8BAAOzB,QAAP,GAAiB,CAAES,KAAK,CAAEA,KAAT,CAAgBc,KAAK,CAAEA,KAAvB,CAA8BG,IAAI,CAAEL,CAApC,CAAjB,EAAf,CACA/B,KAAK,CACFqC,GADH,CACO,4CAA8C1B,EAA9C,CAAmD,GAD1D,CAC+D,CAC3DA,EAAE,CAAEA,EADuD,CAE3DP,KAAK,CAAEA,KAFoD,CAG3DE,WAAW,CAAEA,WAH8C,CAI3DC,SAAS,CAAEA,SAJgD,CAK3DC,MAAM,CAAEA,MALmD,CAM3DC,QAAQ,CAAEA,QANiD,CAO3DC,QAAQ,CAAEyB,WAPiD,CAD/D,EAUGG,IAVH,CAUQ,SAACC,QAAD,CAAc,CAClBC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACD,CAZH,EAaGG,KAbH,CAaS,SAACC,KAAD,CAAW,CAChBH,OAAO,CAACC,GAAR,CAAYE,KAAZ,EACD,CAfH,EAgBA1B,QAAQ,CAAC,SAAD,CAAY,CAAEZ,KAAK,CAAE,CAAE4B,KAAK,CAAEA,KAAT,CAAgB1B,SAAS,CAAEA,SAA3B,CAAT,CAAZ,CAAR,CACD,CAED,mBACE,sCACE,aAAK,KAAK,CAAE,CAAEqC,SAAS,CAAE,QAAb,CAAZ,wBACE,oBAAKxC,KAAL,EADF,cAEE,oBAAKE,WAAL,EAFF,CAGGC,SAAS,CAACsC,GAAV,CAAc,SAACC,QAAD,qBACb,YAAK,KAAK,CAAE,CAACC,KAAK,CAAE,OAAR,CAAiBC,MAAM,CAAE,MAAzB,CAAZ,uBACA,MAAC,IAAD,EAAuB,KAAK,CAAE,CAAEA,MAAM,CAAE,MAAV,CAAkBD,KAAK,CAAE,OAAzB,CAA9B,wBACE,kCACYD,QAAQ,CAACG,MADrB,OACgCH,QAAQ,CAACI,GADzC,GADF,cAIE,KAAC,eAAD,EAEE,OAAO,CAAEJ,QAAQ,CAACK,OAFpB,CAGE,IAAI,CAAEL,QAAQ,CAACM,IAHjB,CAIE,SAAS,CAAEpC,SAJb,CAKE,MAAM,CAAED,MALV,CAME,EAAE,CAAE+B,QAAQ,CAACG,MAAT,CAAkB,CANxB,EACO5B,MAAM,CAAC,EAAD,CADb,CAJF,GAAWA,MAAM,CAAC,EAAD,CAAjB,CADA,EADa,EAAd,CAHH,cAqBE,YAAK,SAAS,CAAEtB,OAAO,CAACsD,OAAxB,uBACE,eAAQ,OAAO,CAAEvB,aAAjB,uBACE,8BADF,EADF,EArBF,GADF,EADF,CA+BD,CAED,cAAe5B,CAAAA,QAAf","sourcesContent":["import { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../components/ui/Card\";\r\nimport GenerateOptions from \"../components/ui/GenerateOption\";\r\nimport classes from \"../components/quizzes/QuizItem.module.css\";\r\n\r\nimport axios from \"axios\";\r\nimport AuthContext from \"../context/AuthContext\";\r\n\r\nfunction TakePage() {\r\n  const location = useLocation();\r\n  const title = location.state.title;\r\n  const description = location.state.description;\r\n  const questions = location.state.questions;\r\n  const author = location.state.author;\r\n  const username = location.state.username;\r\n  const attempts = location.state.attempts;\r\n  const id = location.state.id;\r\n  const [record, setRecord] = useState([Array(questions.length).fill(false)]);\r\n  const navigate = useNavigate();\r\n  let { user } = useContext(AuthContext);\r\n  let taker = user ? user.username.toString() : \"Anonymous\";\r\n\r\n  function makeid(length) {\r\n    var result = \"\";\r\n    var characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n  function submitHandler() {\r\n    const d = Date();\r\n    var score = 0;\r\n    for (const answer in record) {\r\n      if (record[answer] === true) {\r\n        score += 1;\r\n      }\r\n    }\r\n    let newAttempts = [...attempts, { taker: taker, score: score, time: d }];\r\n    axios\r\n      .put(\"https://quiz-handler.fly.dev/api/quizzes/\" + id + \"/\", {\r\n        id: id,\r\n        title: title,\r\n        description: description,\r\n        questions: questions,\r\n        author: author,\r\n        username: username,\r\n        attempts: newAttempts,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    navigate(\"/result\", { state: { score: score, questions: questions } });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h1>{title}</h1>\r\n        <h3>{description}</h3>\r\n        {questions.map((question) => (\r\n          <div style={{width: \"30rem\", margin: \"auto\"}}>\r\n          <Card key={makeid(10)} style={{ margin: \"auto\", width: \"900px\" }}>\r\n            <h4>\r\n              Question {question.number} - {question.ask}\r\n            </h4>\r\n            <GenerateOptions\r\n              key={makeid(10)}\r\n              options={question.options}\r\n              type={question.type}\r\n              setRecord={setRecord}\r\n              record={record}\r\n              id={question.number - 1}\r\n            />\r\n            \r\n          </Card>\r\n          </div>\r\n        ))}\r\n        <div className={classes.actions}>\r\n          <button onClick={submitHandler}>\r\n            <h2>Submit</h2>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TakePage;\r\n"]},"metadata":{},"sourceType":"module"}