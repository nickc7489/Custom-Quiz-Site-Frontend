{"ast":null,"code":"import _slicedToArray from\"C:/Users/nickc/Coding Projects/Web Dev/React/Custom-Quiz-Website/quiz-creator/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import QuestionContent from\"./QuestionContent\";import Card from\"../ui/Card\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Question(props){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),dummyState=_useState2[0],setDummy=_useState2[1];function makeid(length){var result=\"\";var characters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";var charactersLength=characters.length;for(var i=0;i<length;i++){result+=characters.charAt(Math.floor(Math.random()*charactersLength));}return result;}function setFree(event){var dummy=props.questions;dummy[props.num][\"type\"]=\"Free Response\";dummy[props.num][\"options\"]=[];props.updateQuestions(dummy);setDummy(!dummyState);}function setMult(event){var dummy=props.questions;dummy[props.num][\"type\"]=\"Multiple Choice\";dummy[props.num][\"options\"]=[];props.updateQuestions(dummy);setDummy(!dummyState);}function setAsk(event){var dummy=props.questions;dummy[props.num][\"ask\"]=event.target.value;}var buttonName=makeid(10);var isFree=props.questions[props.num][\"type\"]===\"Free Response\";return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"ask\",name:\"ask\",placeholder:\"Type Question Here\",defaultValue:props.questions[props.num][\"ask\"],onChange:setAsk}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"free-response\",style:{display:\"inline\"},children:\"\\xA0Free Response\"}),/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:\"free-response\",name:buttonName,value:\"FREE-RESPONSE\",onClick:setFree,defaultChecked:isFree,style:{width:\"auto\",display:\"inline\"}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"multiple-choice\",style:{display:\"inline\"},children:\"\\xA0Multiple Choice\"}),/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:\"multiple-choice\",name:buttonName,onClick:setMult,value:\"MULTIPLE-CHOICE\",defaultChecked:!isFree,style:{width:\"auto\",display:\"inline\"}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"\\xA0\",/*#__PURE__*/_jsx(QuestionContent,{num:props.num,updateQuestions:props.updateQuestions,questions:props.questions}),/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"br\",{})]});}export default Question;","map":{"version":3,"sources":["C:/Users/nickc/Coding Projects/Web Dev/React/Custom-Quiz-Website/quiz-creator/src/components/questions/Question.js"],"names":["useState","QuestionContent","Card","Question","props","dummyState","setDummy","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","setFree","event","dummy","questions","num","updateQuestions","setMult","setAsk","target","value","buttonName","isFree","display","width"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\n\r\nimport QuestionContent from \"./QuestionContent\";\r\nimport Card from \"../ui/Card\";\r\n\r\nfunction Question(props) {\r\n  const [dummyState, setDummy] = useState(true);\r\n  function makeid(length) {\r\n    var result = \"\";\r\n    var characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function setFree(event) {\r\n    const dummy = props.questions;\r\n    dummy[props.num][\"type\"] = \"Free Response\";\r\n    dummy[props.num][\"options\"] = [];\r\n    props.updateQuestions(dummy);\r\n    setDummy(!dummyState);\r\n  }\r\n\r\n  function setMult(event) {\r\n    const dummy = props.questions;\r\n    dummy[props.num][\"type\"] = \"Multiple Choice\";\r\n    dummy[props.num][\"options\"] = [];\r\n    props.updateQuestions(dummy);\r\n    setDummy(!dummyState);\r\n  }\r\n  function setAsk(event) {\r\n    const dummy = props.questions;\r\n    dummy[props.num][\"ask\"] = event.target.value;\r\n  }\r\n\r\n  const buttonName = makeid(10);\r\n  const isFree = props.questions[props.num][\"type\"] === \"Free Response\";\r\n\r\n  return (\r\n    <><Card>\r\n      <input\r\n        type=\"text\"\r\n        id=\"ask\"\r\n        name=\"ask\"\r\n        placeholder=\"Type Question Here\"\r\n        defaultValue={props.questions[props.num][\"ask\"]}\r\n        onChange={setAsk} />\r\n      <br></br>\r\n      <label htmlFor=\"free-response\" style={{ display: \"inline\" }}>&nbsp;Free Response</label>\r\n      <input\r\n        type=\"radio\"\r\n        id=\"free-response\"\r\n        name={buttonName}\r\n        value=\"FREE-RESPONSE\"\r\n        onClick={setFree}\r\n        defaultChecked={isFree}\r\n        style={{ width: \"auto\", display: \"inline\" }} />\r\n      <br></br>\r\n      <br></br>\r\n      <label htmlFor=\"multiple-choice\" style={{ display: \"inline\" }}>&nbsp;Multiple Choice</label>\r\n      <input\r\n        type=\"radio\"\r\n        id=\"multiple-choice\"\r\n        name={buttonName}\r\n        onClick={setMult}\r\n        value=\"MULTIPLE-CHOICE\"\r\n        defaultChecked={!isFree}\r\n        style={{ width: \"auto\", display: \"inline\" }} />\r\n      <br></br>\r\n      <br></br>\r\n      &nbsp;\r\n      <QuestionContent\r\n        num={props.num}\r\n        updateQuestions={props.updateQuestions}\r\n        questions={props.questions} />\r\n      <br></br>\r\n    </Card><br></br></>\r\n    \r\n  );\r\n}\r\n\r\nexport default Question;\r\n"]},"metadata":{},"sourceType":"module"}