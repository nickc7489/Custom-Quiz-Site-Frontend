{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nickc\\\\Coding Projects\\\\Web Dev\\\\React\\\\Custom-Quiz-Website\\\\quiz-creator\\\\src\\\\pages\\\\TakePage.js\",\n    _s = $RefreshSig$();\n\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useState, useContext } from \"react\";\nimport Card from \"../components/ui/Card\";\nimport GenerateOptions from \"../components/ui/GenerateOption\";\nimport classes from \"../components/quizzes/QuizItem.module.css\";\nimport axios from \"axios\";\nimport AuthContext from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TakePage() {\n  _s();\n\n  const location = useLocation();\n  const title = location.state.title;\n  const description = location.state.description;\n  const questions = location.state.questions;\n  const author = location.state.author;\n  const username = location.state.username;\n  const attempts = location.state.attempts;\n  const id = location.state.id;\n  const [record, setRecord] = useState([Array(questions.length).fill(false)]);\n  const navigate = useNavigate();\n  let {\n    user\n  } = useContext(AuthContext);\n  let taker = user ? user.username.toString() : \"Anonymous\";\n\n  function makeid(length) {\n    var result = \"\";\n    var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n  }\n\n  function submitHandler() {\n    const d = Date();\n    var score = 0;\n\n    for (const answer in record) {\n      if (record[answer] === true) {\n        score += 1;\n      }\n    }\n\n    let newAttempts = [...attempts, {\n      taker: taker,\n      score: score,\n      time: d\n    }];\n    axios.put(\"https://quiz-handler.fly.dev/api/quizzes/\" + id + \"/\", {\n      id: id,\n      title: title,\n      description: description,\n      questions: questions,\n      author: author,\n      username: username,\n      attempts: newAttempts\n    }).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n    navigate(\"/result\", {\n      state: {\n        score: score,\n        questions: questions\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"30rem\",\n          margin: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            margin: \"auto\",\n            width: \"900px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Question \", question.number, \" - \", question.ask]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GenerateOptions, {\n            options: question.options,\n            type: question.type,\n            setRecord: setRecord,\n            record: record,\n            id: question.number - 1\n          }, makeid(10), false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, makeid(10), true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitHandler,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(TakePage, \"sOrHvGp2CJjfggqVxwRSvArj9A0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = TakePage;\nexport default TakePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TakePage\");","map":{"version":3,"sources":["C:/Users/nickc/Coding Projects/Web Dev/React/Custom-Quiz-Website/quiz-creator/src/pages/TakePage.js"],"names":["useLocation","useNavigate","useState","useContext","Card","GenerateOptions","classes","axios","AuthContext","TakePage","location","title","state","description","questions","author","username","attempts","id","record","setRecord","Array","length","fill","navigate","user","taker","toString","makeid","result","characters","charactersLength","i","charAt","Math","floor","random","submitHandler","d","Date","score","answer","newAttempts","time","put","then","response","console","log","catch","error","textAlign","map","question","width","margin","number","ask","options","type","actions"],"mappings":"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","sourcesContent":["import { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../components/ui/Card\";\r\nimport GenerateOptions from \"../components/ui/GenerateOption\";\r\nimport classes from \"../components/quizzes/QuizItem.module.css\";\r\n\r\nimport axios from \"axios\";\r\nimport AuthContext from \"../context/AuthContext\";\r\n\r\nfunction TakePage() {\r\n  const location = useLocation();\r\n  const title = location.state.title;\r\n  const description = location.state.description;\r\n  const questions = location.state.questions;\r\n  const author = location.state.author;\r\n  const username = location.state.username;\r\n  const attempts = location.state.attempts;\r\n  const id = location.state.id;\r\n  const [record, setRecord] = useState([Array(questions.length).fill(false)]);\r\n  const navigate = useNavigate();\r\n  let { user } = useContext(AuthContext);\r\n  let taker = user ? user.username.toString() : \"Anonymous\";\r\n\r\n  function makeid(length) {\r\n    var result = \"\";\r\n    var characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n  function submitHandler() {\r\n    const d = Date();\r\n    var score = 0;\r\n    for (const answer in record) {\r\n      if (record[answer] === true) {\r\n        score += 1;\r\n      }\r\n    }\r\n    let newAttempts = [...attempts, { taker: taker, score: score, time: d }];\r\n    axios\r\n      .put(\"https://quiz-handler.fly.dev/api/quizzes/\" + id + \"/\", {\r\n        id: id,\r\n        title: title,\r\n        description: description,\r\n        questions: questions,\r\n        author: author,\r\n        username: username,\r\n        attempts: newAttempts,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    navigate(\"/result\", { state: { score: score, questions: questions } });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h1>{title}</h1>\r\n        <h3>{description}</h3>\r\n        {questions.map((question) => (\r\n          <div style={{width: \"30rem\", margin: \"auto\"}}>\r\n          <Card key={makeid(10)} style={{ margin: \"auto\", width: \"900px\" }}>\r\n            <h4>\r\n              Question {question.number} - {question.ask}\r\n            </h4>\r\n            <GenerateOptions\r\n              key={makeid(10)}\r\n              options={question.options}\r\n              type={question.type}\r\n              setRecord={setRecord}\r\n              record={record}\r\n              id={question.number - 1}\r\n            />\r\n            \r\n          </Card>\r\n          </div>\r\n        ))}\r\n        <div className={classes.actions}>\r\n          <button onClick={submitHandler}>\r\n            <h2>Submit</h2>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TakePage;\r\n"]},"metadata":{},"sourceType":"module"}