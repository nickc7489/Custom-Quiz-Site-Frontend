{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nickc\\\\Coding Projects\\\\Web Dev\\\\React\\\\Custom-Quiz-Website\\\\quiz-creator\\\\src\\\\context\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [authTokens, setAuthTokens] = useState(() => localStorage.getItem(\"authTokens\") ? JSON.parse(localStorage.getItem(\"authTokens\")) : null);\n  const [user, setUser] = useState(() => localStorage.getItem(\"authTokens\") ? jwt_decode(localStorage.getItem(\"authTokens\")) : null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  const loginUser = async (username, password) => {\n    const response = await fetch(\"https://quiz-handler.fly.dev/api/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.json();\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      navigate(\"/\");\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  const registerUser = async (username, password, password2) => {\n    const response = await fetch(\"https://quiz-handler.fly.dev/api/register/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password2\n      })\n    });\n\n    if (response.status === 201) {\n      navigate(\"/login\");\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    navigate(\"/\");\n  };\n\n  const contextData = {\n    user,\n    setUser,\n    authTokens,\n    setAuthTokens,\n    registerUser,\n    loginUser,\n    logoutUser\n  };\n  useEffect(() => {\n    if (authTokens) {\n      setUser(jwt_decode(authTokens.access));\n    }\n\n    setLoading(false);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: loading ? null : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"dY0yy5oTmQZhiPgZi3kbwcyQL5U=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/nickc/Coding Projects/Web Dev/React/Custom-Quiz-Website/quiz-creator/src/context/AuthContext.js"],"names":["createContext","useState","useEffect","jwt_decode","useNavigate","AuthContext","AuthProvider","children","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","navigate","loginUser","username","password","response","fetch","method","headers","body","stringify","data","json","status","access","setItem","alert","registerUser","password2","logoutUser","removeItem","contextData"],"mappings":"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","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [authTokens, setAuthTokens] = useState(() =>\r\n    localStorage.getItem(\"authTokens\")\r\n      ? JSON.parse(localStorage.getItem(\"authTokens\"))\r\n      : null\r\n  );\r\n  const [user, setUser] = useState(() =>\r\n    localStorage.getItem(\"authTokens\")\r\n      ? jwt_decode(localStorage.getItem(\"authTokens\"))\r\n      : null\r\n  );\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const loginUser = async (username, password) => {\r\n    const response = await fetch(\"https://quiz-handler.fly.dev/api/token/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password\r\n      })\r\n    });\r\n    const data = await response.json();\r\n\r\n    if (response.status === 200) {\r\n      setAuthTokens(data);\r\n      setUser(jwt_decode(data.access));\r\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n      navigate(\"/\");\r\n    } else {\r\n      alert(\"Something went wrong!\");\r\n    }\r\n  };\r\n  \r\n  const registerUser = async (username, password, password2) => {\r\n    const response = await fetch(\"https://quiz-handler.fly.dev/api/register/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password,\r\n        password2\r\n      })\r\n    });\r\n    if (response.status === 201) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      alert(\"Something went wrong!\");\r\n    }\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    setAuthTokens(null);\r\n    setUser(null);\r\n    localStorage.removeItem(\"authTokens\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const contextData = {\r\n    user,\r\n    setUser,\r\n    authTokens,\r\n    setAuthTokens,\r\n    registerUser,\r\n    loginUser,\r\n    logoutUser\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (authTokens) {\r\n      setUser(jwt_decode(authTokens.access));\r\n    }\r\n    setLoading(false);\r\n  }, [authTokens, loading]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextData}>\r\n      {loading ? null : children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}