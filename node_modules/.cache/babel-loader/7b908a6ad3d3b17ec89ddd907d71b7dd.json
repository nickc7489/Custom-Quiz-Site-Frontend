{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nickc\\\\Coding Projects\\\\Web Dev\\\\React\\\\Custom-Quiz-Website\\\\quiz-creator\\\\src\\\\pages\\\\ResultPage.js\",\n    _s = $RefreshSig$();\n\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport classes from \"../components/quizzes/QuizItem.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ResultPage() {\n  _s();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const score = location.state.score;\n  const questions = location.state.questions;\n  const key = [];\n\n  function makeid(length) {\n    var result = \"\";\n    var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n  }\n\n  for (var k = 0; k < questions.length; k++) {\n    const question = questions[k];\n\n    if (question.hasOwnProperty(\"options\")) {\n      if (question.type === \"Multiple Choice\") {\n        var an = \"\";\n\n        for (var i = 0; i < question.options.length; i++) {\n          const option = question.options[i];\n\n          if (option.correct) {\n            an = option.text;\n          }\n        }\n\n        key.push(an);\n      } else {\n        var ans = \"\";\n\n        for (var j = 0; j < question.options.length; j++) {\n          if (j === 0) {\n            ans = question.options[j].text;\n          } else {\n            ans = ans + \", \" + question.options[j].text;\n          }\n        }\n\n        key.push(ans);\n      }\n    } else {\n      key.push(\"\");\n    }\n  }\n\n  function returnHandler() {\n    navigate(\"/\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Score: \", score, \" out of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Answer Key:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Question \", question.number, \": \", question.ask]\n      }, makeid(10), true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Answer(s): \", key[question.number - 1]]\n      }, makeid(10), true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, makeid(10), false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, makeid(10), true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: returnHandler,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Back to main page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResultPage, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = ResultPage;\nexport default ResultPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"sources":["C:/Users/nickc/Coding Projects/Web Dev/React/Custom-Quiz-Website/quiz-creator/src/pages/ResultPage.js"],"names":["useLocation","useNavigate","classes","ResultPage","navigate","location","score","state","questions","key","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","k","question","hasOwnProperty","type","an","options","option","correct","text","push","ans","j","returnHandler","textAlign","map","number","ask","actions"],"mappings":"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","sourcesContent":["import { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nimport classes from \"../components/quizzes/QuizItem.module.css\";\r\n\r\nfunction ResultPage() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const score = location.state.score;\r\n  const questions = location.state.questions;\r\n  const key = [];\r\n  function makeid(length) {\r\n    var result = \"\";\r\n    var characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n  for (var k = 0; k < questions.length; k++) {\r\n    const question = questions[k];\r\n    if (question.hasOwnProperty(\"options\")) {\r\n      if (question.type === \"Multiple Choice\") {\r\n        var an = \"\";\r\n        for (var i = 0; i < question.options.length; i++) {\r\n          const option = question.options[i];\r\n          if (option.correct) {\r\n            an = option.text;\r\n          }\r\n        }\r\n        key.push(an);\r\n      } else {\r\n        var ans = \"\";\r\n        for (var j = 0; j < question.options.length; j++) {\r\n          if (j === 0) {\r\n            ans = question.options[j].text;\r\n          } else {\r\n            ans = ans + \", \" + question.options[j].text;\r\n          }\r\n        }\r\n        key.push(ans);\r\n      }\r\n    } else {\r\n      key.push(\"\");\r\n    }\r\n  }\r\n  function returnHandler() {\r\n    navigate(\"/\");\r\n  }\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <h1>\r\n        Score: {score} out of {questions.length}\r\n      </h1>\r\n      <br></br>\r\n      <h2>Answer Key:</h2>\r\n      {questions.map((question) => (\r\n        <div key={makeid(10)}>\r\n          <h3 key={makeid(10)}>\r\n            Question {question.number}: {question.ask}\r\n          </h3>\r\n          <h3 key={makeid(10)}>Answer(s): {key[question.number - 1]}</h3>\r\n          <br key={makeid(10)}></br>\r\n        </div>\r\n      ))}\r\n      <div className={classes.actions}>\r\n        <button onClick={returnHandler}>\r\n          <h2>Back to main page</h2>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultPage;\r\n"]},"metadata":{},"sourceType":"module"}