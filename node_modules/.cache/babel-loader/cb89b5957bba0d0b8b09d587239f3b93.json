{"ast":null,"code":"import _toConsumableArray from\"C:/Users/nickc/Coding Projects/Web Dev/React/Custom-Quiz-Website/quiz-creator/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/nickc/Coding Projects/Web Dev/React/Custom-Quiz-Website/quiz-creator/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useContext}from\"react\";import{useNavigate}from\"react-router-dom\";import classes from\"./CreateQuizForm.module.css\";import Buttons from\"../ui/Buttons\";import Card from\"../ui/Card\";import Question from\"../questions/Question\";import axios from\"axios\";import AuthContext from\"../../context/AuthContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function CreateQuizForm(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],setQuestions=_useState2[1];var _useContext=useContext(AuthContext),user=_useContext.user;var username=user?user.username.toString():\"\";var updateQuestions=function updateQuestions(newState){setQuestions(newState);};var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),titleState=_useState4[0],setTitle=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),descriptionState=_useState6[0],setDescription=_useState6[1];var _useState7=useState(user?user.username.toString():\"Anonymous\"),_useState8=_slicedToArray(_useState7,2),authorState=_useState8[0],setAuthor=_useState8[1];var navigate=useNavigate();function makeid(length){var result=\"\";var characters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";var charactersLength=characters.length;for(var i=0;i<length;i++){result+=characters.charAt(Math.floor(Math.random()*charactersLength));}return result;}function editTitle(event){setTitle(event.target.value);}function editDescription(event){setDescription(event.target.value);}function editAuthor(event){if(event.target.checked){setAuthor(\"Anonymous\");}else{setAuthor(user.username.toString());}}function submitHandler(event){axios.post(\"https://quiz-handler.fly.dev/api/quizzes/\",{title:titleState,description:descriptionState,questions:questions,author:authorState,username:username}).catch(function(err){return console.log(err.response);});navigate(\"/\");window.location.reload();}function addHandler(event){var questionNumber=questions.length;if(questionNumber<500){setQuestions([].concat(_toConsumableArray(questions),[{number:questions.length+1,type:\"Free Response\",ask:\"\"}]));}}function subtractHandler(event){var questionNumber=questions.length;if(questionNumber>0){setQuestions(questions.slice(0,-1));}}return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(\"form\",{className:classes.form,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"title\",children:\"Quiz Title\"}),/*#__PURE__*/_jsx(\"input\",{required:true,type:\"text\",id:\"title\",onChange:editTitle})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"description\",children:\"Description\"}),/*#__PURE__*/_jsx(\"input\",{required:true,type:\"text\",id:\"description\",onChange:editDescription})]}),!user?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"h4\",{style:{color:\"#77002e\",margin:\"7px\",marginLeft:\"0px\"},children:\"WARNING: Since you aren't loggin in, the author in your quiz will be listed as \\\"Anonymous\\\"\"})}):/*#__PURE__*/_jsx(_Fragment,{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Buttons,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:subtractHandler,type:\"button\",children:\"-\"}),\" \",questions.length,\" \",/*#__PURE__*/_jsx(\"button\",{onClick:addHandler,type:\"button\",children:\"+\"})]}),/*#__PURE__*/_jsx(\"br\",{}),questions.map(function(question){return/*#__PURE__*/_jsx(\"div\",{className:classes.control,children:/*#__PURE__*/_jsx(Question,{num:question.number-1,updateQuestions:updateQuestions,questions:questions},makeid(10))});}),user?/*#__PURE__*/_jsxs(_Fragment,{children:[\"\\xA0\",/*#__PURE__*/_jsx(\"label\",{htmlFor:\"check\",style:{fontWeight:\"normal\",fontSize:\"15px\"},children:\"Check for the quiz author to display as 'Anonymous' instead of your username\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{required:true,type:\"checkbox\",id:\"check\",onChange:editAuthor})})]}):/*#__PURE__*/_jsx(_Fragment,{}),/*#__PURE__*/_jsx(\"div\",{className:classes.actions,style:{display:\"flex\"},children:/*#__PURE__*/_jsx(\"button\",{action:\"submit\",className:classes.actions,onClick:submitHandler,style:{alignSelf:\"flexStart\",marginTop:\"7px\"},children:\"Create Quiz\"})})]})]})});}export default CreateQuizForm;","map":{"version":3,"sources":["C:/Users/nickc/Coding Projects/Web Dev/React/Custom-Quiz-Website/quiz-creator/src/components/quizzes/CreateQuizForm.js"],"names":["useState","useContext","useNavigate","classes","Buttons","Card","Question","axios","AuthContext","CreateQuizForm","props","questions","setQuestions","user","username","toString","updateQuestions","newState","titleState","setTitle","descriptionState","setDescription","authorState","setAuthor","navigate","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","editTitle","event","target","value","editDescription","editAuthor","checked","submitHandler","post","title","description","author","catch","err","console","log","response","window","location","reload","addHandler","questionNumber","number","type","ask","subtractHandler","slice","form","control","color","margin","marginLeft","map","question","fontWeight","fontSize","actions","display","alignSelf","marginTop"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport classes from \"./CreateQuizForm.module.css\";\r\nimport Buttons from \"../ui/Buttons\";\r\nimport Card from \"../ui/Card\";\r\nimport Question from \"../questions/Question\";\r\nimport axios from \"axios\";\r\nimport AuthContext from \"../../context/AuthContext\";\r\n\r\nfunction CreateQuizForm(props) {\r\n  const [questions, setQuestions] = useState([]);\r\n  let { user } = useContext(AuthContext);\r\n  const username = user ? user.username.toString() : \"\";\r\n  const updateQuestions = (newState) => {\r\n    setQuestions(newState);\r\n  };\r\n\r\n  const [titleState, setTitle] = useState(\"\");\r\n  const [descriptionState, setDescription] = useState(\"\");\r\n  const [authorState, setAuthor] = useState(\r\n    user ? user.username.toString() : \"Anonymous\"\r\n  );\r\n\r\n  const navigate = useNavigate();\r\n  function makeid(length) {\r\n    var result = \"\";\r\n    var characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function editTitle(event) {\r\n    setTitle(event.target.value);\r\n  }\r\n\r\n  function editDescription(event) {\r\n    setDescription(event.target.value);\r\n  }\r\n\r\n  function editAuthor(event) {\r\n    if(event.target.checked){\r\n      setAuthor(\"Anonymous\")\r\n    }\r\n    else{\r\n      setAuthor(user.username.toString())\r\n    }\r\n  }\r\n\r\n  function submitHandler(event) {\r\n    axios\r\n      .post(\"https://quiz-handler.fly.dev/api/quizzes/\", {\r\n        title: titleState,\r\n        description: descriptionState,\r\n        questions: questions,\r\n        author: authorState,\r\n        username: username\r\n      })\r\n      .catch((err) => console.log(err.response));\r\n    navigate(\"/\");\r\n    window.location.reload();\r\n  }\r\n\r\n  function addHandler(event) {\r\n    var questionNumber = questions.length;\r\n    if (questionNumber < 500) {\r\n      setQuestions([\r\n        ...questions,\r\n        {\r\n          number: questions.length + 1,\r\n          type: \"Free Response\",\r\n          ask: \"\",\r\n        },\r\n      ]);\r\n    }\r\n  }\r\n\r\n  function subtractHandler(event) {\r\n    var questionNumber = questions.length;\r\n    if (questionNumber > 0) {\r\n      setQuestions(questions.slice(0, -1));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <form className={classes.form}>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"title\">Quiz Title</label>\r\n          <input required type=\"text\" id=\"title\" onChange={editTitle} />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"description\">Description</label>\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            id=\"description\"\r\n            onChange={editDescription}\r\n          />\r\n        </div>\r\n        {!user ? (\r\n            <>\r\n              <h4 style={{color: \"#77002e\", margin: \"7px\", marginLeft: \"0px\"}}>WARNING: Since you aren't loggin in, the author in your quiz will be listed as \"Anonymous\"</h4>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        <div>\r\n          <Buttons>\r\n            <button onClick={subtractHandler} type=\"button\">\r\n              -\r\n            </button>{\" \"}\r\n            {questions.length}{\" \"}\r\n            <button onClick={addHandler} type=\"button\">\r\n              +\r\n            </button>\r\n          </Buttons>\r\n          <br></br>\r\n          {questions.map((question) => (\r\n            <div className={classes.control}>\r\n            <Question\r\n              num={question.number - 1}\r\n              updateQuestions={updateQuestions}\r\n              questions={questions}\r\n              key={makeid(10)}\r\n            />\r\n            </div>\r\n          ))}\r\n          {user ? (\r\n            <>\r\n              &nbsp;\r\n              <label\r\n                htmlFor=\"check\"\r\n                style={{\r\n                  fontWeight: \"normal\",\r\n                  fontSize: \"15px\",\r\n                }}\r\n              >\r\n                Check for the quiz author to display as 'Anonymous' instead of\r\n                your username\r\n              </label>\r\n              <div>\r\n                <input\r\n                  required\r\n                  type=\"checkbox\"\r\n                  id=\"check\"\r\n                  onChange={editAuthor}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <div className={classes.actions} style={{ display: \"flex\" }}>\r\n            <button\r\n              action=\"submit\"\r\n              className={classes.actions}\r\n              onClick={submitHandler}\r\n              style={{ alignSelf: \"flexStart\", marginTop: \"7px\" }}\r\n            >\r\n              Create Quiz\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CreateQuizForm;\r\n"]},"metadata":{},"sourceType":"module"}