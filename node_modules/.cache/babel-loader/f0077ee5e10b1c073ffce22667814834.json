{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nickc\\\\Coding Projects\\\\Web Dev\\\\React\\\\Custom-Quiz-Website\\\\quiz-creator\\\\src\\\\components\\\\quizzes\\\\CreateQuizForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport classes from \"./CreateQuizForm.module.css\";\nimport Buttons from \"../ui/Buttons\";\nimport Card from \"../ui/Card\";\nimport Question from \"../questions/Question\";\nimport axios from \"axios\";\nimport AuthContext from \"../../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CreateQuizForm(props) {\n  _s();\n\n  const [questions, setQuestions] = useState([]);\n  let {\n    user\n  } = useContext(AuthContext);\n  const username = user ? user.username.toString() : \"\";\n\n  const updateQuestions = newState => {\n    setQuestions(newState);\n  };\n\n  const [titleState, setTitle] = useState(\"\");\n  const [descriptionState, setDescription] = useState(\"\");\n  const [authorState, setAuthor] = useState(user ? user.username.toString() : \"Anonymous\");\n  const navigate = useNavigate();\n\n  function makeid(length) {\n    var result = \"\";\n    var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n  }\n\n  function editTitle(event) {\n    setTitle(event.target.value);\n  }\n\n  function editDescription(event) {\n    setDescription(event.target.value);\n  }\n\n  function editAuthor(event) {\n    if (event.target.checked) {\n      setAuthor(\"Anonymous\");\n    } else {\n      setAuthor(user.username.toString());\n    }\n  }\n\n  function submitHandler(event) {\n    axios.post(\"http://127.0.0.1:8000/api/quizzes/\", {\n      title: titleState,\n      description: descriptionState,\n      questions: questions,\n      author: authorState,\n      username: username\n    }).catch(err => console.log(err.response));\n    navigate(\"/\");\n    window.location.reload();\n  }\n\n  function addHandler(event) {\n    var questionNumber = questions.length;\n\n    if (questionNumber < 500) {\n      setQuestions([...questions, {\n        number: questions.length + 1,\n        type: \"Free Response\",\n        ask: \"\"\n      }]);\n    }\n  }\n\n  function subtractHandler(event) {\n    var questionNumber = questions.length;\n\n    if (questionNumber > 0) {\n      setQuestions(questions.slice(0, -1));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Quiz Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          id: \"title\",\n          onChange: editTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          id: \"description\",\n          onChange: editDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), !user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: \"#77002e\",\n            margin: \"7px\",\n            marginLeft: \"0px\"\n          },\n          children: \"WARNING: Since you aren't loggin in, the author in your quiz will be listed as \\\"Anonymous\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Buttons, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: subtractHandler,\n            type: \"button\",\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), \" \", questions.length, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addHandler,\n            type: \"button\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            num: question.number - 1,\n            updateQuestions: updateQuestions,\n            questions: questions\n          }, makeid(10), false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)), user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"\\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"check\",\n            style: {\n              fontWeight: \"normal\",\n              fontSize: \"15px\"\n            },\n            children: \"Check for the quiz author to display as 'Anonymous' instead of your username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"checkbox\",\n              id: \"check\",\n              onChange: editAuthor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          style: {\n            display: \"flex\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            action: \"submit\",\n            className: classes.actions,\n            onClick: submitHandler,\n            style: {\n              alignSelf: \"flexStart\",\n              marginTop: \"7px\"\n            },\n            children: \"Create Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateQuizForm, \"xd+wJn9CLU5DGvGT8gEyJGoh2OM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreateQuizForm;\nexport default CreateQuizForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateQuizForm\");","map":{"version":3,"sources":["C:/Users/nickc/Coding Projects/Web Dev/React/Custom-Quiz-Website/quiz-creator/src/components/quizzes/CreateQuizForm.js"],"names":["useState","useContext","useNavigate","classes","Buttons","Card","Question","axios","AuthContext","CreateQuizForm","props","questions","setQuestions","user","username","toString","updateQuestions","newState","titleState","setTitle","descriptionState","setDescription","authorState","setAuthor","navigate","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","editTitle","event","target","value","editDescription","editAuthor","checked","submitHandler","post","title","description","author","catch","err","console","log","response","window","location","reload","addHandler","questionNumber","number","type","ask","subtractHandler","slice","form","control","color","margin","marginLeft","map","question","fontWeight","fontSize","actions","display","alignSelf","marginTop"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport classes from \"./CreateQuizForm.module.css\";\r\nimport Buttons from \"../ui/Buttons\";\r\nimport Card from \"../ui/Card\";\r\nimport Question from \"../questions/Question\";\r\nimport axios from \"axios\";\r\nimport AuthContext from \"../../context/AuthContext\";\r\n\r\nfunction CreateQuizForm(props) {\r\n  const [questions, setQuestions] = useState([]);\r\n  let { user } = useContext(AuthContext);\r\n  const username = user ? user.username.toString() : \"\";\r\n  const updateQuestions = (newState) => {\r\n    setQuestions(newState);\r\n  };\r\n\r\n  const [titleState, setTitle] = useState(\"\");\r\n  const [descriptionState, setDescription] = useState(\"\");\r\n  const [authorState, setAuthor] = useState(\r\n    user ? user.username.toString() : \"Anonymous\"\r\n  );\r\n\r\n  const navigate = useNavigate();\r\n  function makeid(length) {\r\n    var result = \"\";\r\n    var characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function editTitle(event) {\r\n    setTitle(event.target.value);\r\n  }\r\n\r\n  function editDescription(event) {\r\n    setDescription(event.target.value);\r\n  }\r\n\r\n  function editAuthor(event) {\r\n    if(event.target.checked){\r\n      setAuthor(\"Anonymous\")\r\n    }\r\n    else{\r\n      setAuthor(user.username.toString())\r\n    }\r\n  }\r\n\r\n  function submitHandler(event) {\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/api/quizzes/\", {\r\n        title: titleState,\r\n        description: descriptionState,\r\n        questions: questions,\r\n        author: authorState,\r\n        username: username\r\n      })\r\n      .catch((err) => console.log(err.response));\r\n    navigate(\"/\");\r\n    window.location.reload();\r\n  }\r\n\r\n  function addHandler(event) {\r\n    var questionNumber = questions.length;\r\n    if (questionNumber < 500) {\r\n      setQuestions([\r\n        ...questions,\r\n        {\r\n          number: questions.length + 1,\r\n          type: \"Free Response\",\r\n          ask: \"\",\r\n        },\r\n      ]);\r\n    }\r\n  }\r\n\r\n  function subtractHandler(event) {\r\n    var questionNumber = questions.length;\r\n    if (questionNumber > 0) {\r\n      setQuestions(questions.slice(0, -1));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <form className={classes.form}>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"title\">Quiz Title</label>\r\n          <input required type=\"text\" id=\"title\" onChange={editTitle} />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"description\">Description</label>\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            id=\"description\"\r\n            onChange={editDescription}\r\n          />\r\n        </div>\r\n        {!user ? (\r\n            <>\r\n              <h4 style={{color: \"#77002e\", margin: \"7px\", marginLeft: \"0px\"}}>WARNING: Since you aren't loggin in, the author in your quiz will be listed as \"Anonymous\"</h4>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        <div>\r\n          <Buttons>\r\n            <button onClick={subtractHandler} type=\"button\">\r\n              -\r\n            </button>{\" \"}\r\n            {questions.length}{\" \"}\r\n            <button onClick={addHandler} type=\"button\">\r\n              +\r\n            </button>\r\n          </Buttons>\r\n          <br></br>\r\n          {questions.map((question) => (\r\n            <div className={classes.control}>\r\n            <Question\r\n              num={question.number - 1}\r\n              updateQuestions={updateQuestions}\r\n              questions={questions}\r\n              key={makeid(10)}\r\n            />\r\n            </div>\r\n          ))}\r\n          {user ? (\r\n            <>\r\n              &nbsp;\r\n              <label\r\n                htmlFor=\"check\"\r\n                style={{\r\n                  fontWeight: \"normal\",\r\n                  fontSize: \"15px\",\r\n                }}\r\n              >\r\n                Check for the quiz author to display as 'Anonymous' instead of\r\n                your username\r\n              </label>\r\n              <div>\r\n                <input\r\n                  required\r\n                  type=\"checkbox\"\r\n                  id=\"check\"\r\n                  onChange={editAuthor}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <div className={classes.actions} style={{ display: \"flex\" }}>\r\n            <button\r\n              action=\"submit\"\r\n              className={classes.actions}\r\n              onClick={submitHandler}\r\n              style={{ alignSelf: \"flexStart\", marginTop: \"7px\" }}\r\n            >\r\n              Create Quiz\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CreateQuizForm;\r\n"]},"metadata":{},"sourceType":"module"}